// Each new term in the Fibonacci sequence is generated by adding the 
// previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do 
// not exceed four million, find the sum of the even-valued terms.

// define ceiling for our fibonacci sequence.
const NumberToStopAt = 4000000;

function getFibonacciNumbers(num) {
    // create array to hold results.
    let results = [1, 2];

    while (results.slice(-1) < num) {
    let newNum = 0;
    let nums = results.slice(-2);
    newNum = nums[0] + nums[1];
        results.push(newNum)
    }
    console.log(results); 
    results.pop();
    console.log(results)   
    return results;
}

getFibonacciNumbers(NumberToStopAt);

function getEvenFibonacciNumberSum() {
    let range = getFibonacciNumbers(NumberToStopAt);
    let result = 0;
    range.forEach(function (num) {
        if (num % 2 === 0) {
            result += num;
        }
    });
    console.log(result);
}

getEvenFibonacciNumberSum();